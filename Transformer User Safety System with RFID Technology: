#include <Keypad.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <SPI.h>
#include <MFRC522.h>

// Keypad setup
const byte ROWS = 4;
const byte COLS = 3;
char keys[ROWS][COLS] = {
  {'1', '2', '3'},
  {'4', '5', '6'},
  {'7', '8', '9'},
  {'*', '0', '#'}
};
byte rowPins[ROWS] = {9, 8, 7, 6}; 
byte colPins[COLS] = {A2, A1, A0}; 
Keypad keypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);

// RFID setup
#define SS_PIN 10
#define RST_PIN 9
MFRC522 mfrc522(SS_PIN, RST_PIN); 

// LCD setup
LiquidCrystal_I2C lcd(0x27, 16, 2);

// OTP related variables
String correctOTP = "1234"; // Initial OTP for testing
String enteredOTP = "";
bool otpCorrect = false;

// LED pins
const int ledPin = 13;   // LED for OTP confirmation
const int led2Pin = 9;   // LED for wrong OTP
const int resetPin = 2;  // Reset button

// Sample RFID card user data (Tag UID -> User Name)
String userName = "Unknown";

// Function prototypes
String generateOTP();

void setup() {
  lcd.init();
  lcd.backlight();
  lcd.clear();
  lcd.setCursor(1, 0);
  lcd.print("WELCOME TO ");
  lcd.setCursor(1, 1);
  lcd.print("ELECTROFORCE ");
  delay(2000);

  pinMode(ledPin, OUTPUT);
  pinMode(led2Pin, OUTPUT);
  pinMode(resetPin, INPUT_PULLUP);
  digitalWrite(ledPin, LOW);
  digitalWrite(led2Pin, LOW);

  // Initialize serial communication
  Serial.begin(9600);

  // Initialize RFID
  SPI.begin();
  mfrc522.PCD_Init();

  // Ready to read RFID card
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Insert RFID Card");
}

void loop() {
  // Check for RFID card presence
  if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial()) {
    String cardUID = "";
    for (byte i = 0; i < mfrc522.uid.size; i++) {
      cardUID += String(mfrc522.uid.uidByte[i], HEX);
    }
    Serial.println("Card UID: " + cardUID);

    // Map cardUID to a user name
    if (cardUID == "4f19a1b2") {  // Replace with your actual card UID
      userName = "DEEPA";
    } else if (cardUID == "7c29c3d4") {  // Replace with your actual card UID
      userName = "ANBU";
    } else {
      userName = "Unknown";
    }
    
    // Display the user's name on the LCD
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("User: ");
    lcd.setCursor(6, 0);
    lcd.print(userName);
    
    // Generate and display OTP
    correctOTP = generateOTP();
    lcd.setCursor(0, 1);
    lcd.print("OTP: ");
    lcd.print(correctOTP);
    
    // Send OTP to Serial Monitor for debugging
    Serial.println("Hello " + userName + ", your OTP is: " + correctOTP);
    
    delay(3000);
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Enter OTP: ");
  }

  // Keypad input handling for OTP
  char key = keypad.getKey();
  if (key) {
    enteredOTP += key;
    lcd.setCursor(0, 1);
    lcd.print(enteredOTP);

    // Check if 4-digit OTP has been entered
    if (enteredOTP.length() == 4) {
      if (enteredOTP == correctOTP) {
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print("OTP Correct");
        Serial.println("OTP Correct");
        digitalWrite(ledPin, HIGH);  // Turn on LED for correct OTP
        delay(2000);
        digitalWrite(ledPin, LOW);
        otpCorrect = true;
      } else {
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print("Wrong OTP");
        Serial.println("Wrong OTP");
        digitalWrite(led2Pin, HIGH);  // Turn on LED for wrong OTP
        delay(2000);
        digitalWrite(led2Pin, LOW);
        enteredOTP = "";  // Reset entered OTP for re-entry
        otpCorrect = false;
        lcd.setCursor(0, 0);
        lcd.print("Re-enter OTP: ");
      }
    }
  }

  // Reset button handling
  if (digitalRead(resetPin) == LOW) {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Resetting...");
    enteredOTP = "";
    otpCorrect = false;
    delay(1000);
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Insert RFID Card");
  }
}

String generateOTP() {
  String otp = "";
  for (int i = 0; i < 4; i++) {
    otp += String(random(0, 10));  // Generate a random 4-digit OTP
  }
  return otp;
}
